apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "qloo.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    gloo: qloo
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.qloo.replicaCount }}
  selector:
    matchLabels:
      gloo: qloo
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        gloo: qloo
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: assignnodeid
        image: busybox
        command:
        - sed
        - s/NODE_ID_PLACE_HOLDER/$(POD_NAME).$(POD_NAMESPACE)/;w /config-tmp/envoy.yaml
        - "/config/envoy.yaml"
        volumeMounts:
        - name: envoy-config
          mountPath: /config
        - name: config-tmp
          mountPath: /config-tmp
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
      containers:
      - name: envoy
        image: "{{ .Values.qloo.proxy.image }}:{{ .Values.qloo.proxy.imageTag }}"
        imagePullPolicy: {{ .Values.qloo.proxy.imagePullPolicy }}
        ports: 
        - containerPort: {{ .Values.qloo.proxy.port }}
          name: http
        - containerPort: {{ .Values.qloo.proxy.securePort }}
          name: https
        - containerPort: {{ .Values.qloo.proxy.adminPort }}
          name: admin
        command: ["envoy"]
        args: ["-c", "/config/envoy.yaml", "--v2-config-only"]
        volumeMounts:
        - name: config-tmp
          mountPath: /config
      volumes:
      - name: envoy-config
        configMap:
          name: {{ template "qloo.fullname" .}}-proxy-config
      - name: config-tmp
        emptyDir: {}
---
# GW
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name}}-qloo
  namespace: {{ .Release.Namespace }}
  labels:
    gloo: qloo
    release: {{ .Release.Name }}
spec:
  type: {{ .Values.qloo.proxy.type }}
  ports:
    - port: {{ .Values.qloo.proxy.port }}
      protocol: TCP
      name: http
    - port: {{ .Values.qloo.proxy.securePort }}
      protocol: TCP
      name: https
    {{ if .Values.qloo.proxy.exposeAdminPort -}}
    - port: {{ .Values.qloo.proxy.adminPort }}
      protocol: TCP
      name: admin
    {{- end }}
  selector:
    gloo: qloo
    release: {{ .Release.Name }}